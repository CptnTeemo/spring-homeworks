package com.example.MyBookShopApp.data;

import com.example.MyBookShopApp.data.model.book.BookLikeEntity;
import com.example.MyBookShopApp.data.model.book.TagEntity;
import com.example.MyBookShopApp.data.model.book.file.BookFileEntity;
import com.example.MyBookShopApp.data.model.book.review.BookReviewEntity;
import com.example.MyBookShopApp.data.model.genre.GenreEntity;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@Entity
@Table(name = "books")
@ApiModel(description = "entity representing a book")
public class Book implements Comparable<Book>{

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(columnDefinition = "INT NOT NULL AUTO_INCREMENT")
    @ApiModelProperty(value = "author id generated by db", position = 1)
    private Integer id;
    @Column(name = "pub_date", columnDefinition = "DATE NOT NULL")
    @ApiModelProperty(value = "date of book publication")
    private Date pubDate;
    @Column(name = "is_bestseller", columnDefinition = "INT NOT NULL")
    @ApiModelProperty("if isBestseller = 1 so the book is considered to be bestseller and if 0 the book is a not" +
            "a bestseller")
    private Integer isBestseller;
    @Column(columnDefinition = "VARCHAR(255) NOT NULL")
    @ApiModelProperty("mnemonical identity sequence of characters")
    private String slug;
    @Column(columnDefinition = "VARCHAR(255) NOT NULL")
    @ApiModelProperty("book title")
    private String title;
    @Column(columnDefinition = "VARCHAR(255)")
    @ApiModelProperty("image url")
    private String image;
    @Column(columnDefinition = "TEXT")
    @ApiModelProperty("book description text")
    private String description;
    @Column(name = "price")
    @JsonProperty("price")
    @ApiModelProperty("book price without discount")
    private Integer priceOld;
    @Column(name = "discount")
    @JsonProperty("discount")
    @ApiModelProperty("discount value for book")
    private Double price;

    @Column(name = "kept")
    private Integer kept;

    @Column(name = "cart")
    private Integer cart;

    @Column(name = "bought")
    private Integer bought;

    @Transient
    private Double popular;

    @Transient
    private Double bookRate;

    @ManyToOne
    @JoinColumn(name = "author_id", referencedColumnName = "id")
    @JsonIgnore
    private Author author;

    @ManyToOne
    @JoinColumn(name = "tag_id", referencedColumnName = "id")
    @JsonIgnore
    private TagEntity tag;

    @ManyToMany
    @JoinTable(name = "book2genre",
            joinColumns = @JoinColumn(name = "book_id"),
            inverseJoinColumns = @JoinColumn(name = "genre_id"))
    @JsonIgnore
    private List<GenreEntity> genreEntityList;

    @JsonProperty
    public Integer discountPrice() {
        Integer discountedPriceInt = priceOld - Math.toIntExact(Math.round(price * priceOld));
        return discountedPriceInt;
    }

    @OneToMany(mappedBy = "book")
    @JsonIgnore
    private List<BookFileEntity> bookFileEntityList = new ArrayList<>();

    @OneToMany(mappedBy = "bookId")
    @JsonIgnore
    private List<BookLikeEntity> booksLikes;

    @OneToMany(mappedBy = "bookReview")
    @JsonIgnore
    private List<BookReviewEntity> reviews;

    @JsonGetter("authors")
    public String authorsFullName() {
        return author.toString();
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Date getPubDate() {
        return pubDate;
    }

    public void setPubDate(Date pubDate) {
        this.pubDate = pubDate;
    }

    public Integer getIsBestseller() {
        return isBestseller;
    }

    public void setIsBestseller(Integer isBestseller) {
        this.isBestseller = isBestseller;
    }

    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Integer getPriceOld() {
        return priceOld;
    }

    public void setPriceOld(Integer priceOld) {
        this.priceOld = priceOld;
    }

    public Double getPrice() {
        return price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    public Author getAuthor() {
        return author;
    }

    public void setAuthor(Author author) {
        this.author = author;
    }

    public Integer getKept() {
        return kept;
    }

    public void setKept(Integer kept) {
        this.kept = kept;
    }

    public Integer getCart() {
        return cart;
    }

    public void setCart(Integer cart) {
        this.cart = cart;
    }

    public Integer getBought() {
        return bought;
    }

    public void setBought(Integer bought) {
        this.bought = bought;
    }

    public Double getPopular() {
        return popular;
    }

    public void setPopular(Double popular) {
        this.popular = popular;
    }

    public TagEntity getTag() {
        return tag;
    }

    public void setTag(TagEntity tag) {
        this.tag = tag;
    }

    @Override
    public int compareTo(Book otherBook) {
        return this.popular.compareTo(otherBook.getPopular());
    }

    public List<GenreEntity> getGenreEntityList() {
        return genreEntityList;
    }

    public void setGenreEntityList(List<GenreEntity> genreEntityList) {
        this.genreEntityList = genreEntityList;
    }

    public List<BookFileEntity> getBookFileEntityList() {
        return bookFileEntityList;
    }

    public void setBookFileEntityList(List<BookFileEntity> bookFileEntityList) {
        this.bookFileEntityList = bookFileEntityList;
    }

    public List<BookLikeEntity> getBooksLikes() {
        return booksLikes;
    }

    public void setBooksLikes(List<BookLikeEntity> booksLikes) {
        this.booksLikes = booksLikes;
    }

    public List<BookReviewEntity> getReviews() {
        return reviews;
    }

    public void setReviews(List<BookReviewEntity> reviews) {
        this.reviews = reviews;
    }

    public Double getBookRate() {
        return bookRate;
    }

    public void setBookRate(Double bookRate) {
        this.bookRate = bookRate;
    }

    @Override
    public String toString() {
        return "Book{" +
                "id=" + id +
                ", author=" + author +
                ", tag=" + tag +
                '}';
    }
}